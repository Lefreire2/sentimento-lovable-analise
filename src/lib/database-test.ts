
import { supabase } from "@/integrations/supabase/client";

export const testDatabaseConnection = async () => {
    console.log('üß™ TEST - Testando conectividade CORRIGIDA do banco');
    
    try {
        // Teste com a tabela do Andr√© Ara√∫jo que sabemos que tem dados
        const { data, error, count } = await supabase
            .from('Lista_de_Mensagens_Andre_araujo')
            .select('*', { count: 'exact' })
            .limit(5);
        
        console.log('üß™ TEST - Resultado do teste (Andr√© Ara√∫jo):');
        console.log('  - Sucesso:', !error);
        console.log('  - Erro:', error);
        console.log('  - Count total:', count);
        console.log('  - Dados retornados:', data?.length || 0);
        console.log('  - Primeiro registro:', data?.[0]);
        
        if (error) {
            console.error('‚ùå TEST - Erro de conectividade:', error);
            return false;
        }
        
        if (count && count > 0) {
            console.log('‚úÖ TEST - SUCESSO! Conectividade funcionando com', count, 'registros');
            return true;
        } else {
            console.log('‚ö†Ô∏è TEST - Conectividade OK mas tabela vazia');
            return true; // Conex√£o funciona mesmo se vazia
        }
        
    } catch (err) {
        console.error('üí• TEST - Exce√ß√£o durante teste:', err);
        return false;
    }
};

export const testSpecificTable = async (tableName: string) => {
    console.log('üß™ TABLE-TEST - Testando tabela espec√≠fica:', tableName);
    
    try {
        const { data, error, count } = await supabase
            .from(tableName as any)
            .select('*', { count: 'exact' })
            .limit(3);
        
        console.log(`üß™ TABLE-TEST - Resultado para ${tableName}:`);
        console.log('  - Sucesso:', !error);
        console.log('  - Erro:', error);
        console.log('  - Count total:', count);
        console.log('  - Dados retornados:', data?.length || 0);
        console.log('  - Amostra de dados:', data);
        
        return {
            success: !error,
            error,
            count,
            data
        };
        
    } catch (err) {
        console.error(`üí• TABLE-TEST - Exce√ß√£o para ${tableName}:`, err);
        return {
            success: false,
            error: err,
            count: null,
            data: null
        };
    }
};

// Teste espec√≠fico para o Andr√© Ara√∫jo com os 3.326 registros
export const testAndreAraujoData = async () => {
    console.log('üéØ ANDR√â-TEST - Testando dados espec√≠ficos do Andr√© Ara√∫jo');
    
    const tablesToTest = [
        'Lista_de_Mensagens_Andre_araujo',
        'Lista_mensagens_Andre_araujo'
    ];
    
    for (const tableName of tablesToTest) {
        console.log(`üîç ANDR√â-TEST - Testando ${tableName}...`);
        
        try {
            const { data, error, count } = await supabase
                .from(tableName as any)
                .select('*', { count: 'exact' })
                .limit(10);
            
            console.log(`üìä ANDR√â-TEST - Resultado ${tableName}:`);
            console.log('  - Erro:', error);
            console.log('  - Count:', count);
            console.log('  - Dados:', data?.length || 0);
            
            if (!error && count && count > 0) {
                console.log(`‚úÖ ANDR√â-TEST - ENCONTROU DADOS em ${tableName}!`);
                console.log('  - Total de registros:', count);
                console.log('  - Amostra:', data?.slice(0, 2));
                return { tableName, count, data };
            }
        } catch (err) {
            console.error(`üí• ANDR√â-TEST - Erro em ${tableName}:`, err);
        }
    }
    
    console.log('‚ùå ANDR√â-TEST - Nenhuma tabela do Andr√© Ara√∫jo retornou dados');
    return null;
};
