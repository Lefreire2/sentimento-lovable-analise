
import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { leadId } = await req.json();
    console.log('üß† Analisando inten√ß√£o para lead:', leadId);

    // Simulando an√°lise de inten√ß√£o com IA
    const intentionAnalysis = {
      id: crypto.randomUUID(),
      lead_id: leadId,
      nivel_intencao: Math.random() > 0.5 ? 'Alta' : Math.random() > 0.3 ? 'M√©dia' : 'Baixa',
      score_intencao: Math.floor(Math.random() * 100),
      fatores_positivos: [
        'Respondeu rapidamente √†s mensagens',
        'Fez perguntas espec√≠ficas sobre o produto',
        'Demonstrou urg√™ncia na solu√ß√£o'
      ],
      fatores_negativos: [
        'N√£o forneceu informa√ß√µes de contato completas',
        'Hesita√ß√£o em rela√ß√£o ao pre√ßo'
      ],
      momento_ideal_contato: 'Manh√£ (09:00 - 11:00)',
      tipo_abordagem_recomendada: 'Abordagem consultiva focada em benef√≠cios espec√≠ficos',
      probabilidade_conversao: Math.floor(Math.random() * 100),
      data_analise: new Date().toISOString()
    };

    console.log('‚úÖ An√°lise de inten√ß√£o conclu√≠da:', intentionAnalysis);

    return new Response(
      JSON.stringify(intentionAnalysis),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200,
      },
    )
  } catch (error) {
    console.error('‚ùå Erro na an√°lise de inten√ß√£o:', error);
    
    return new Response(
      JSON.stringify({ error: error.message }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500,
      },
    )
  }
})
